// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(uuid())
  fullName    String
  email       String   @unique
  phoneNumber String
  password    String
  status      String
  roleId      String
  role        Role     @relation(fields: [roleId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  permissions String
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LoanProvider {
  id                        String        @id @default(uuid())
  name                      String        @unique
  icon                      String
  colorHex                  String
  displayOrder              Int
  accountNumber             String?
  allowMultipleProviderLoans Boolean      @default(false)
  allowCrossProviderLoans    Boolean      @default(false)
  products                  LoanProduct[]
  createdAt                 DateTime      @default(now())
  updatedAt                 DateTime      @updatedAt
}

model LoanProduct {
  name                      String
  description               String?
  icon                      String
  minLoan                   Float
  maxLoan                   Float
  status                    String
  serviceFeeEnabled         Boolean       @default(true)
  serviceFee                String
  dailyFeeEnabled           Boolean       @default(true)
  dailyFee                  String
  penaltyRulesEnabled       Boolean       @default(true)
  penaltyRules              String
  provider                  LoanProvider  @relation(fields: [providerId], references: [id])
  providerId                String
  loanAmountTiers           LoanAmountTier[]
  createdAt                 DateTime      @default(now())
  updatedAt                 DateTime      @updatedAt

  @@id([name, providerId])
}

model LoanAmountTier {
  id         String      @id @default(uuid())
  fromScore  Int
  toScore    Int
  loanAmount Float
  product    LoanProduct @relation(fields: [productName, providerId], references: [name, providerId])
  productName String
  providerId String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Customer {
  id              String   @id
  age             Int
  gender          String
  monthlyIncome   Float
  educationLevel  String
  loanHistory     String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
